{"mode":"Text","hardwareTarget":"brain","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\n// AI Classification Competition Element IDs\nenum gameElements {\n  mobileGoal,\n  redRing,\n  blueRing,\n};\n\ndigital_out pn = digital_out(Brain.ThreeWirePort.H);\n// AI Vision Color Descriptions\naivision::colordesc eyes__redring(1, 188, 41, 97, 31, 1);\naivision::colordesc eyes__bluering(2, 71, 109, 137, 19, 0.67);\n// AI Vision Code Descriptions\nvex::aivision eyes(PORT9, eyes__redring, eyes__bluering, aivision::ALL_AIOBJS);\n\nmotor Motor20 = motor(PORT20, ratio18_1, false);\n\ndigital_out Ipiston = digital_out(Brain.ThreeWirePort.G);\nmotor lbb = motor(PORT10, ratio18_1, false);\n\n\n\n// generating and setting random seed\nvoid initializeRandomSeed(){\n  int systemTime = Brain.Timer.systemHighResolution();\n  double batteryCurrent = Brain.Battery.current();\n  double batteryVoltage = Brain.Battery.voltage(voltageUnits::mV);\n\n  // Combine these values into a single integer\n  int seed = int(batteryVoltage + batteryCurrent * 100) + systemTime;\n\n  // Set the seed\n  srand(seed);\n}\n\n\n\nvoid vexcodeInit() {\n\n  //Initializing random seed.\n  initializeRandomSeed(); \n}\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n#pragma endregion VEXcode Generated Robot Configuration\n\n// ----------------------------------------------------------------------------\n//                                                                            \n//    Project:  R- and +                                             \n//    Author: 8025B\n//    Created:1/25/25\n//    Configuration: Competition Template       \n//                                                                            \n// ----------------------------------------------------------------------------\n\n// Include the V5 Library\n#include \"vex.h\"\n\n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nmotor lf = motor(PORT7, ratio6_1, true);\nmotor lb = motor(PORT8, ratio6_1, true);\nmotor lt = motor(PORT6, ratio6_1, false);\nmotor_group leftmtrs(lf,lb);\nmotor rb = motor(PORT18, ratio6_1, false);\nmotor rf = motor(PORT17, ratio6_1, false);\nmotor rt = motor(PORT16, ratio6_1, true);\nmotor_group rightmtrs(rf,rb);\ndrivetrain Drivetrain = drivetrain(leftmtrs, rightmtrs, 299.24, 295, 40, mm, 0.6);\nmotor_group r = motor_group(lt, lb,lf);\nmotor_group l = motor_group(rt, rb,rf);\nmotor hook = motor(PORT2, ratio6_1);\nmotor intake1 = motor(PORT4, ratio18_1);\nmotor intake2 = motor(PORT14, ratio18_1,false);\nmotor_group intake = motor_group(intake1, intake2);\ncontroller Controller1 = controller();\n\n// Begin project code\n\nvoid preAutonomous(void) {\n}\n\nvoid autonomous(void) {\npn.set(true);\nintake1.setVelocity(100,percent);\nintake2.setVelocity(100,percent);\nhook.setVelocity(47 ,percent);\nintake1.spin(reverse);//set all the stuff\nintake2.spin(forward);\n\n//What do u think of spinning the conveyyor and lb???\nlbb.spin(reverse);\nwait(1,seconds);\nlbb.stop();\n// Well idc so too bad...\n\nl.setVelocity(20,percent);\nr.setVelocity(20,percent);\n// Yes, this too\n\nl.spin(reverse);//Ur going backwards to mogo\nr.spin(reverse);\nwait(0.6,seconds);\npn.set(false);//Clamped\nl.stop();\nr.stop();//you stopped\nhook.spin(forward);\n\nl.spin(forward);//Your turning to the front. 180 degrees\nr.spin(reverse);\nwait(1.6,seconds);\nl.stop();\nr.stop();//Yup\n\nl.spin(forward);//Going to first ring\nr.spin(forward);\nwait(2.7,seconds);\nl.stop();\nr.stop();\n\nl.spin(reverse);//turning towards 2nd ring\nr.spin(forward);\nwait(0.82,seconds);\nl.stop();\nr.stop();\n\nl.spin(forward); //going to 2nd ring\nr.spin(forward);\nwait(2,seconds);\nl.stop();\nr.stop();\n\nl.spin(reverse);//turning towards 3rd and 4th ring\nr.spin(forward);\nwait(0.75,seconds);\nl.stop();\nr.stop();\n\nl.spin(forward);//Godspeed towards 3rd and 4th ring\nr.spin(forward);\nwait(3,seconds);\nl.stop();\nr.stop();\n\nhook.spin(reverse); //Unclog the hook; the hook is getting stuck on the 4th ring.\nl.spin(reverse);\nr.spin(reverse);\nwait(0.1,seconds);\nhook.spin(forward);\nl.stop();\nr.stop();\n\n// pn.set (true);\n// l.spin(reverse);//turning towards corner\n// r.spin(forward);\n// wait(1,seconds);\n// l.stop();\n// r.stop();\n\n// l.spin(reverse);//Ur going backwards to corner\n// r.spin(reverse);\n// wait(0.8,seconds);\n// l.stop();\n// r.stop();\n\n// pn.set(true);//let go\n}\nvoid userControl(void){\n}\n\nint main() {\n  // Initializing Robot Configuration. DO NOT REMOVE!\n vexcodeInit();\n  // create competition instance\n  competition Competition;\n\n  // Set up callbacks for autonomous and driver control periods.\n  Competition.autonomous(autonomous);\n  Competition.drivercontrol(userControl);\n\n  \n  // Run the pre-autonomous function.\n  preAutonomous();\n\n  // Prevent main from exiting with an infinite loop.\n  while (true) {\n    wait(100, msec);\n  }\n}","textLanguage":"cpp","robotConfig":[{"port":[8],"name":"pn","customName":true,"deviceType":"DigitalOut","deviceClass":"digital_out","setting":{},"triportSourcePort":22},{"port":[9],"name":"eyes","customName":true,"deviceType":"AIVision","deviceClass":"aivision","setting":{"config":"{\"colors\":[{\"id\":1,\"name\":\"redring\",\"nameValid\":\"Valid\",\"lastValidName\":\"redring\",\"red\":187.51266835016835,\"green\":40.56400112233445,\"blue\":96.68466610549945,\"hueRange\":31,\"saturationRange\":1},{\"id\":2,\"name\":\"bluering\",\"nameValid\":\"Valid\",\"lastValidName\":\"bluering\",\"red\":70.64200869539411,\"green\":108.72225931861348,\"blue\":137.33179754273505,\"hueRange\":19,\"saturationRange\":0.67}],\"codes\":[],\"tags\":false,\"AIObjects\":true,\"AIObjectModel\":[\"Ball(Blue)\",\"Ball(Green)\",\"Ball(Red)\",\"Ring(Blue)\",\"Ring(Green)\",\"Ring(Red)\",\"Cube(Blue)\",\"Cube(Green)\",\"Cube(Red)\"],\"AIModelMetadata\":{\"id\":16,\"version\":1,\"name\":\"2024-2025 High Stakes\"},\"aiModelDropDownValue\":\"2024-2025 High Stakes\"}","isConfigured":"false"},"triportSourcePort":22},{"port":[20],"name":"Motor20","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[7],"name":"Ipiston","customName":true,"deviceType":"DigitalOut","deviceClass":"digital_out","setting":{},"triportSourcePort":22},{"port":[10],"name":"lbb","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22}],"slot":5,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.8","minVersion":"3.1.0","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}